{{- if .Values.auditVolume.enabled }}
{{- $fullName := include "backendService.fullname" . -}}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ include "backendService.fullname" . }}-audit
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "backendService.mutableLabels" . | nindent 4 }}
  annotations:
    pv.kubernetes.io/provisioned-by: blob.csi.azure.com
spec:
  capacity:
    storage: {{ default "1Ti" .Values.auditVolume.capacity }}
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain 
  storageClassName: azureblob-nfs-premium # storage class gets installed via terraform property blob_driver_enabled
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    volumeHandle: {{ printf "%s-%s" .Values.auditVolume.attributes.storageAccount (default $fullName .Values.auditVolume.attributes.containerName) }}
    volumeAttributes:
      resourceGroup: {{ .Values.auditVolume.attributes.resourceGroup }}
      storageAccount: {{ .Values.auditVolume.attributes.storageAccount }}
      containerName: {{ default $fullName .Values.auditVolume.attributes.containerName }}
      protocol: nfs
---
apiVersion: v1        
kind: PersistentVolumeClaim
metadata:
  name: {{ include "backendService.fullname" . }}-audit
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "backendService.mutableLabels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ default "1Ti" .Values.auditVolume.capacity }}
  volumeName: {{ include "backendService.fullname" . }}-audit
  storageClassName: azureblob-nfs-premium # storage class gets installed via terraform property blob_driver_enabled
{{- end }}