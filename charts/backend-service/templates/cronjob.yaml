{{- if .Values.cronJob.enabled -}}
{{- $fullName := include "backendService.fullname" . -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  {{- if .Values.cronJob.name }}
  name: {{ $fullName }}-{{ .Values.cronJob.name }}
  {{- else }}
  name: {{ $fullName }}
  {{- end }}
  labels:
    {{- include "backendService.labelsCronJob" . | nindent 4 }}
spec:
  suspend: {{ .Values.cronJob.suspend }}
  schedule: {{ .Values.cronJob.schedule | quote }}
  timeZone: {{ .Values.cronJob.timeZone | quote }}
  concurrencyPolicy: {{ .Values.cronJob.concurrencyPolicy | quote }}
  successfulJobsHistoryLimit: {{ .Values.cronJob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronJob.failedJobsHistoryLimit }}
  startingDeadlineSeconds: {{ .Values.cronJob.startingDeadlineSeconds }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "backendService.labelsCronJob" . | nindent 12 }}
            {{- if .Values.secretProvider }}
            aadpodidbinding: {{ default "keyvault" (.Values.secretProvider).aadPodIdBinding }}
            {{- end }}
          annotations:
            checksum/cronjob-env: {{ include (print $.Chart.Name "/templates/cronjob-env.yaml") . | sha256sum | trunc 8 | quote }}
            {{- if .Values.envSecrets }}
            checksum/secrets: {{ include (print $.Chart.Name "/templates/secrets.yaml") . | sha256sum | trunc 8 | quote }}
            {{- end }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ .Values.cronJob.jobTemplate.restartPolicy | quote }}
          {{- if .Values.cronJob.initContainers }}
          initContainers:
          {{- range .Values.cronJob.initContainers }}
            - name: {{ .name | default (printf "init-%s" $fullName) }}
              image: "{{ .image | default "busybox:1.28" }}"
              restartPolicy: "{{ .restartPolicy | default "Always" }}"
              command: {{ .command | toYaml | nindent 16 }}
              {{- if .volumeMounts }}
              volumeMounts:
              {{- range .volumeMounts }}
                - name: {{ .name}}
                  mountPath: {{ .mountPath }}   
                  readOnly: {{ .readOnly | default false }}
              {{- end }}
              {{- end }}
          {{- end }}
          {{- end }}
          containers:
            - name: {{ .Values.cronJob.jobTemplate.containers.name | quote }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
              {{- if.Values.cronJob.initContainers }}
              {{- range .Values.cronJob.initContainers }}
              {{- if .volumeMounts }}
              {{- range .volumeMounts }}
                - name: {{ .name }}
                  mountPath: {{ .mountPathCronjob | default .mountPath }}
                  readOnly: {{ .readOnly | default false }}
              {{- end }}
              {{- end }}   
              {{- end }}
              {{- end }}
              {{- with .Values.volumeMounts }}
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- if .Values.secretProvider }}
              {{- range $k, $v := .Values.secretProvider.vaults }}
                - name: {{ $fullName }}-{{ $k }}
                  mountPath: "/mnt/{{ $fullName }}-{{ $k }}"
                  readOnly: true
              {{- end }}
              {{- end }}
              securityContext: {{- toYaml .Values.securityContext | nindent 16 }}
              envFrom:
                - configMapRef:
                    name: {{ $fullName }}-cronjob-env
                {{- if .Values.envSecrets }}
                - secretRef:
                    name: {{ $fullName }}-secrets
                {{- end }}
                {{- if .Values.extraEnvCM }}
                {{- range $v := .Values.extraEnvCM }}
                - configMapRef:
                    name: {{ $v }}
                {{- end }}
                {{- end }}
                {{- if .Values.extraEnvSecrets }}
                {{- range $v := .Values.extraEnvSecrets }}
                - secretRef:
                    name: {{ $v }}
                {{- end }}
                {{- end }}
              env:
                {{- with .Values.envVars }}
                  {{- toYaml . | nindent 16 }}
                {{- end }}
                {{- if .Values.secretProvider }}
                {{- range $k, $v := .Values.secretProvider.vaults }}
                {{- range $key, $value := $v }}
                - name: {{ $key }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ $fullName }}-{{ $k }}
                      key: {{ $value }}
                {{- end }}
                {{- end }}
                {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
          {{- if .Values.cronJob.initContainers }}
          {{- range .Values.cronJob.initContainers }}
          {{- if .volumeMounts }}
          {{- range .volumeMounts }}
            - name: {{ .name }}
              emptyDir: {}
          {{- end }}
          {{- end }}   
          {{- end }}
          {{- end }}
          {{- with .Values.volumes }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.secretProvider }}
          {{- range $k, $v := .Values.secretProvider.vaults }}
            - name: {{ $fullName }}-{{ $k }}
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ $fullName }}-{{ $k }}
          {{- end }}
          {{- end }}
{{- end }}
